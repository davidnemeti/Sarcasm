<ParseTree>
  <Node Term="program">
    <Node Term="&quot;program&quot;" Terminal="BnfiTermKeyTerm" Value="program" />
    <Node Term="name">
      <Node Term="string">
        <Node Term="identifier" Terminal="IdentifierTerminal" Value="HelloWorld" />
      </Node>
    </Node>
    <Node Term="_convertoptfrom_nameref">
      <Node Term="&quot;namespace&quot;" Terminal="BnfiTermKeyTerm" Value="namespace" />
      <Node Term="namespace_name">
        <Node Term="PlusList&lt;string&gt;">
          <Node Term="string">
            <Node Term="identifier" Terminal="IdentifierTerminal" Value="Sea" />
          </Node>
          <Node Term="string">
            <Node Term="identifier" Terminal="IdentifierTerminal" Value="Shell" />
          </Node>
        </Node>
      </Node>
    </Node>
    <Node Term="StarList&lt;function&gt;">
      <Node Term="function">
        <Node Term="&quot;function&quot;" Terminal="BnfiTermKeyTerm" Value="function" />
        <Node Term="name">
          <Node Term="string">
            <Node Term="identifier" Terminal="IdentifierTerminal" Value="Fibonacci" />
          </Node>
        </Node>
        <Node Term="StarList&lt;parameter&gt;">
          <Node Term="parameter">
            <Node Term="&quot;var&quot;" Terminal="BnfiTermKeyTerm" Value="var" />
            <Node Term="name">
              <Node Term="string">
                <Node Term="identifier" Terminal="IdentifierTerminal" Value="n" />
              </Node>
            </Node>
            <Node Term="type">
              <Node Term="&quot;integer&quot;_parse">
                <Node Term="&quot;integer&quot;" Terminal="BnfiTermKeyTerm" Value="integer" />
              </Node>
            </Node>
          </Node>
        </Node>
        <Node Term="_convertoptfrom_type">
          <Node Term="type">
            <Node Term="&quot;integer&quot;_parse">
              <Node Term="&quot;integer&quot;" Terminal="BnfiTermKeyTerm" Value="integer" />
            </Node>
          </Node>
        </Node>
        <Node Term="&quot;begin&quot;" Terminal="BnfiTermKeyTerm" Value="begin" />
        <Node Term="PlusList&lt;statement&gt;">
          <Node Term="statement">
            <Node Term="if">
              <Node Term="&quot;if&quot;" Terminal="BnfiTermKeyTerm" Value="if" />
              <Node Term="expression">
                <Node Term="binaryexpression">
                  <Node Term="expression">
                    <Node Term="variablereference">
                      <Node Term="nameref_convertfrom_nameref">
                        <Node Term="nameref">
                          <Node Term="string">
                            <Node Term="identifier" Terminal="IdentifierTerminal" Value="n" />
                          </Node>
                        </Node>
                      </Node>
                    </Node>
                  </Node>
                  <Node Term="binaryoperator">
                    <Node Term="&quot;=&quot;_parse">
                      <Node Term="&quot;=&quot;" Terminal="BnfiTermKeyTerm" Value="=" />
                    </Node>
                  </Node>
                  <Node Term="expression">
                    <Node Term="numberliteral">
                      <Node Term="numberliteral_parse">
                        <Node Term="numberliteral" Terminal="NumberLiteral" Value="0" />
                      </Node>
                    </Node>
                  </Node>
                </Node>
              </Node>
              <Node Term="&quot;then&quot;" Terminal="BnfiTermKeyTerm" Value="then" />
              <Node Term="statement">
                <Node Term="return">
                  <Node Term="&quot;return&quot;" Terminal="BnfiTermKeyTerm" Value="return" />
                  <Node Term="expression">
                    <Node Term="numberliteral">
                      <Node Term="numberliteral_parse">
                        <Node Term="numberliteral" Terminal="NumberLiteral" Value="0" />
                      </Node>
                    </Node>
                  </Node>
                </Node>
              </Node>
              <Node Term="_convertoptfrom_statement">
                <Node Term="&quot;else&quot;" Terminal="BnfiTermKeyTerm" Value="else" />
                <Node Term="statement">
                  <Node Term="if">
                    <Node Term="&quot;if&quot;" Terminal="BnfiTermKeyTerm" Value="if" />
                    <Node Term="expression">
                      <Node Term="binaryexpression">
                        <Node Term="expression">
                          <Node Term="variablereference">
                            <Node Term="nameref_convertfrom_nameref">
                              <Node Term="nameref">
                                <Node Term="string">
                                  <Node Term="identifier" Terminal="IdentifierTerminal" Value="n" />
                                </Node>
                              </Node>
                            </Node>
                          </Node>
                        </Node>
                        <Node Term="binaryoperator">
                          <Node Term="&quot;=&quot;_parse">
                            <Node Term="&quot;=&quot;" Terminal="BnfiTermKeyTerm" Value="=" />
                          </Node>
                        </Node>
                        <Node Term="expression">
                          <Node Term="numberliteral">
                            <Node Term="numberliteral_parse">
                              <Node Term="numberliteral" Terminal="NumberLiteral" Value="1" />
                            </Node>
                          </Node>
                        </Node>
                      </Node>
                    </Node>
                    <Node Term="&quot;then&quot;" Terminal="BnfiTermKeyTerm" Value="then" />
                    <Node Term="statement">
                      <Node Term="return">
                        <Node Term="&quot;return&quot;" Terminal="BnfiTermKeyTerm" Value="return" />
                        <Node Term="expression">
                          <Node Term="numberliteral">
                            <Node Term="numberliteral_parse">
                              <Node Term="numberliteral" Terminal="NumberLiteral" Value="1" />
                            </Node>
                          </Node>
                        </Node>
                      </Node>
                    </Node>
                    <Node Term="_convertoptfrom_statement">
                      <Node Term="&quot;else&quot;" Terminal="BnfiTermKeyTerm" Value="else" />
                      <Node Term="statement">
                        <Node Term="return">
                          <Node Term="&quot;return&quot;" Terminal="BnfiTermKeyTerm" Value="return" />
                          <Node Term="expression">
                            <Node Term="binaryexpression">
                              <Node Term="expression">
                                <Node Term="functioncall">
                                  <Node Term="reference&lt;function&gt;">
                                    <Node Term="nameref">
                                      <Node Term="string">
                                        <Node Term="identifier" Terminal="IdentifierTerminal" Value="Fibonacci" />
                                      </Node>
                                    </Node>
                                  </Node>
                                  <Node Term="StarList&lt;argument&gt;">
                                    <Node Term="argument">
                                      <Node Term="expression">
                                        <Node Term="binaryexpression">
                                          <Node Term="expression">
                                            <Node Term="variablereference">
                                              <Node Term="nameref_convertfrom_nameref">
                                                <Node Term="nameref">
                                                  <Node Term="string">
                                                    <Node Term="identifier" Terminal="IdentifierTerminal" Value="n" />
                                                  </Node>
                                                </Node>
                                              </Node>
                                            </Node>
                                          </Node>
                                          <Node Term="binaryoperator">
                                            <Node Term="&quot;-&quot;_parse">
                                              <Node Term="&quot;-&quot;" Terminal="BnfiTermKeyTerm" Value="-" />
                                            </Node>
                                          </Node>
                                          <Node Term="expression">
                                            <Node Term="numberliteral">
                                              <Node Term="numberliteral_parse">
                                                <Node Term="numberliteral" Terminal="NumberLiteral" Value="1" />
                                              </Node>
                                            </Node>
                                          </Node>
                                        </Node>
                                      </Node>
                                    </Node>
                                  </Node>
                                </Node>
                              </Node>
                              <Node Term="binaryoperator">
                                <Node Term="&quot;+&quot;_parse">
                                  <Node Term="&quot;+&quot;" Terminal="BnfiTermKeyTerm" Value="+" />
                                </Node>
                              </Node>
                              <Node Term="expression">
                                <Node Term="functioncall">
                                  <Node Term="reference&lt;function&gt;">
                                    <Node Term="nameref">
                                      <Node Term="string">
                                        <Node Term="identifier" Terminal="IdentifierTerminal" Value="Fibonacci" />
                                      </Node>
                                    </Node>
                                  </Node>
                                  <Node Term="StarList&lt;argument&gt;">
                                    <Node Term="argument">
                                      <Node Term="expression">
                                        <Node Term="binaryexpression">
                                          <Node Term="expression">
                                            <Node Term="variablereference">
                                              <Node Term="nameref_convertfrom_nameref">
                                                <Node Term="nameref">
                                                  <Node Term="string">
                                                    <Node Term="identifier" Terminal="IdentifierTerminal" Value="n" />
                                                  </Node>
                                                </Node>
                                              </Node>
                                            </Node>
                                          </Node>
                                          <Node Term="binaryoperator">
                                            <Node Term="&quot;-&quot;_parse">
                                              <Node Term="&quot;-&quot;" Terminal="BnfiTermKeyTerm" Value="-" />
                                            </Node>
                                          </Node>
                                          <Node Term="expression">
                                            <Node Term="numberliteral">
                                              <Node Term="numberliteral_parse">
                                                <Node Term="numberliteral" Terminal="NumberLiteral" Value="2" />
                                              </Node>
                                            </Node>
                                          </Node>
                                        </Node>
                                      </Node>
                                    </Node>
                                  </Node>
                                </Node>
                              </Node>
                            </Node>
                          </Node>
                        </Node>
                      </Node>
                    </Node>
                  </Node>
                </Node>
              </Node>
            </Node>
          </Node>
        </Node>
        <Node Term="&quot;end&quot;" Terminal="BnfiTermKeyTerm" Value="end" />
      </Node>
    </Node>
    <Node Term="&quot;begin&quot;" Terminal="BnfiTermKeyTerm" Value="begin" />
    <Node Term="PlusList&lt;statement&gt;">
      <Node Term="statement">
        <Node Term="localvariable">
          <Node Term="&quot;var&quot;" Terminal="BnfiTermKeyTerm" Value="var" />
          <Node Term="name">
            <Node Term="string">
              <Node Term="identifier" Terminal="IdentifierTerminal" Value="number" />
            </Node>
          </Node>
          <Node Term="type">
            <Node Term="&quot;integer&quot;_parse">
              <Node Term="&quot;integer&quot;" Terminal="BnfiTermKeyTerm" Value="integer" />
            </Node>
          </Node>
          <Node Term="_convertoptfrom_expression">
            <Node Term="expression">
              <Node Term="numberliteral">
                <Node Term="numberliteral_parse">
                  <Node Term="numberliteral" Terminal="NumberLiteral" Value="5" />
                </Node>
              </Node>
            </Node>
          </Node>
        </Node>
      </Node>
      <Node Term="statement">
        <Node Term="writeln">
          <Node Term="&quot;WriteLn&quot;" Terminal="BnfiTermKeyTerm" Value="WriteLn" />
          <Node Term="StarList&lt;expression&gt;">
            <Node Term="expression">
              <Node Term="variablereference">
                <Node Term="nameref_convertfrom_nameref">
                  <Node Term="nameref">
                    <Node Term="string">
                      <Node Term="identifier" Terminal="IdentifierTerminal" Value="number" />
                    </Node>
                  </Node>
                </Node>
              </Node>
            </Node>
            <Node Term="expression">
              <Node Term="stringliteral">
                <Node Term="stringliteral_parse">
                  <Node Term="stringliteral" Terminal="StringLiteral" Value="th Fibonacci number: " />
                </Node>
              </Node>
            </Node>
            <Node Term="expression">
              <Node Term="functioncall">
                <Node Term="reference&lt;function&gt;">
                  <Node Term="nameref">
                    <Node Term="string">
                      <Node Term="identifier" Terminal="IdentifierTerminal" Value="Fibonacci" />
                    </Node>
                  </Node>
                </Node>
                <Node Term="StarList&lt;argument&gt;">
                  <Node Term="argument">
                    <Node Term="expression">
                      <Node Term="variablereference">
                        <Node Term="nameref_convertfrom_nameref">
                          <Node Term="nameref">
                            <Node Term="string">
                              <Node Term="identifier" Terminal="IdentifierTerminal" Value="number" />
                            </Node>
                          </Node>
                        </Node>
                      </Node>
                    </Node>
                  </Node>
                </Node>
              </Node>
            </Node>
          </Node>
        </Node>
      </Node>
    </Node>
    <Node Term="&quot;end&quot;" Terminal="BnfiTermKeyTerm" Value="end" />
  </Node>
</ParseTree>